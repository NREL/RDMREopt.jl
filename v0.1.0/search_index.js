var documenterSearchIndex = {"docs":
[{"location":"#RDMREopt.jl","page":"Home","title":"RDMREopt.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for RDMREopt.jl","category":"page"},{"location":"#Example","page":"Home","title":"Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using RDMREopt\nusing Xpress\nusing Distributions\n\nu1 = Uncertainty(\n    name=\"Financial.elec_cost_escalation_pct\",\n    distribution=Uniform(-0.01, 0.03)    \n)\nu2 = Uncertainty(\n    name=\"ElectricUtility.outage_start_time_steps\",\n    distribution=Uniform(1, 8000),\n    is_integer=true,\n    is_vector=true  # passes one time step to each REopt model\n)\nu3 = Uncertainty(\n    name=\"PV.size_kw\",\n    distribution=Normal(500, 50)    \n)\nu4 = Uncertainty(\n    \"ElectricLoad.loads_kw\",\n    [\n        ones(8760) .* 8.0,\n        ones(8760) .* 9.0,\n        ones(8760) .* 10.0,\n    ]\n)\nuncertainties = [u1, u2, u3, u4]\n\nmetrics = [\n    \"Financial.lcc\",\n    \"PV.lcoe_per_kwh\"\n    \"probability_of_survival_10_time_steps\"\n]\n\nscenarios = Scenarios(\n    \"base_scenario.json\",\n    uncertainties,\n    metrics;\n    Nscenarios=10,\n    Nparallel=6\n);\n\nrs, outage_sim_results = RDMREopt.run_threaded_scenarios(scenarios, Xpress.Optimizer; remove_series=true);\n\ndf = dicts_to_dataframe(rs)\nsave_dataframe_as_csv(df, \"results.csv\")\nsave_opt_and_outage_sim_results_as_json(\"results.json\", rs, outage_sim_results)\n","category":"page"},{"location":"#Inputs","page":"Home","title":"Inputs","text":"","category":"section"},{"location":"#Uncertainty","page":"Home","title":"Uncertainty","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Uncertainty","category":"page"},{"location":"#RDMREopt.Uncertainty","page":"Home","title":"RDMREopt.Uncertainty","text":"Uncertainty(name::String, distribution::Distribution{Univariate, Continuous})\n\nKeyword struct for defining input uncertainties.\n\nThe name argument can be any REeopt input\nThe distribution argument can be any of the type Distribution{Univariate, Continuous} from  Distributions.jl.\n\nExample\n\nu1 = Uncertainty(\n    name=\"Financial.elec_cost_escalation_pct\",\n    distribution=Uniform(-0.01, 0.03)    \n)\n\nDistribution types\n\nYou can view all of the possible distributions with:\n\nsubtypes(Distribution{Univariate, Continuous})\n\nCustom sample sets\n\nFor the special case of ElectricLoad.loads_kw we allow one to provide a sample set of load profiles. The sample set is sampled uniformly. To use this capability define an Uncertainty as follows:\n\nu4 = Uncertainty(\n    \"ElectricLoad.loads_kw\",\n    [\n        ones(8760) .* 8.0,  # replace these vectors with your load profile samples\n        ones(8760) .* 9.0,\n        ones(8760) .* 10.0,\n    ]\n)\n\n\n\n\n\n","category":"type"},{"location":"#Scenarios","page":"Home","title":"Scenarios","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Scenarios","category":"page"},{"location":"#RDMREopt.Scenarios","page":"Home","title":"RDMREopt.Scenarios","text":"Scenarios(\n    base_scenario::AbstractDict, \n    uncertainties::AbstractVector{Uncertainty},\n    metrics::AbstractVector{String};\n    Nscenarios::Int=100,\n    Nparallel::Int=1,\n    ngens::Int=100\n)\n\nArgs\n\nbase_scenario::AbstractDict a Dict` that defines the base REopt Scenario (see REopt docs for more)\nuncertainties::AbstractVector{Uncertainty} vector of Uncertaintys\nmetrics::AbstractVector{String} vector of output metrics (TODO use these for analysis tools)\n\nKeyword Args\n\nNscenarios::Int number of scenarios to sample from Latin Hypercube\nNparallel::Int number of scenarios to run in parallel (when using Run Threaded Scenarios)\nngens::Int hyperparameter of LatinHypercubeSampling.LHCoptim, used to create Latin Hypercube of samples\n\n\n\n\n\nScenarios(\n    fp::String, \n    uncertainties::AbstractVector{Uncertainty},\n    metrics::AbstractVector{String};\n    Nscenarios::Int=100,\n    Nparallel::Int=1,\n    ngens::Int=100\n)\n\nArgs\n\nfp::String path to a JSON file that defines the base REopt Scenario (see REopt docs for more)\nuncertainties::AbstractVector{Uncertainty} vector of Uncertaintys\nmetrics::AbstractVector{String} vector of output metrics (TODO use these for analysis tools)\n\nKeyword Args\n\nNscenarios::Int number of scenarios to sample from Latin Hypercube\nNparallel::Int number of scenarios to run in parallel (when using Run Threaded Scenarios)\nngens::Int hyperparameter of LatinHypercubeSampling.LHCoptim, used to create Latin Hypercube of samples\n\n\n\n\n\n","category":"type"},{"location":"#Running-REopt-Scenarios","page":"Home","title":"Running REopt Scenarios","text":"","category":"section"},{"location":"#Run-Serial-Scenarios","page":"Home","title":"Run Serial Scenarios","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"run_serial_scenarios","category":"page"},{"location":"#RDMREopt.run_serial_scenarios","page":"Home","title":"RDMREopt.run_serial_scenarios","text":"run_serial_scenarios(s::Scenarios, optimizer; remove_series=false)\n\nRun the REopt scenarios one at a time in for loop and return a vector of dictionaries for results.\n\nIf remove_series is true then all time series results are removed from the dictionaries, which will keep memory use lower and make the results compatible with rectangular data stores.\n\n\n\n\n\n","category":"function"},{"location":"#Run-Threaded-Scenarios","page":"Home","title":"Run Threaded Scenarios","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"run_threaded_scenarios","category":"page"},{"location":"#RDMREopt.run_threaded_scenarios","page":"Home","title":"RDMREopt.run_threaded_scenarios","text":"run_threaded_scenarios(s::Scenarios, optimizer; remove_series=false)\n\nRun batches of REopt scenarios in parallel according to Scenarios.Nparallel and return a vector of dictionaries for results.\n\nIf remove_series is true then all time series results are removed from the dictionaries, which will keep memory use lower and make the results compatible with rectangular data stores.\n\n\n\n\n\n","category":"function"},{"location":"#Analyzing-Results","page":"Home","title":"Analyzing Results","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"dicts_to_dataframe\nsave_dataframe_as_csv\nsave_opt_and_outage_sim_results_as_json","category":"page"},{"location":"#RDMREopt.dicts_to_dataframe","page":"Home","title":"RDMREopt.dicts_to_dataframe","text":"dicts_to_dataframe(ds::AbstractVector)\n\nPut all of the Dicts in ds into a DataFrame. Column names will match keys.\n\n\n\n\n\n","category":"function"},{"location":"#RDMREopt.save_dataframe_as_csv","page":"Home","title":"RDMREopt.save_dataframe_as_csv","text":"save_dataframe_as_csv(df::DataFrame, filename::String)\n\nNeeds no explanation.\n\n\n\n\n\n","category":"function"},{"location":"#RDMREopt.save_opt_and_outage_sim_results_as_json","page":"Home","title":"RDMREopt.save_opt_and_outage_sim_results_as_json","text":"save_opt_and_outage_sim_results_as_json(file_name::String, results::Vector{<:Dict}, outage_sim_results::Vector{<:Dict})\n\nCombine optimization and outage simulator results and save them to JSON using file_name.\n\n\n\n\n\n","category":"function"}]
}
